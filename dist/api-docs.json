swagger: '2.0'
info:
  version: '1.0.0'
  title: Robot API (Simple)
  description: A API created to store and access robots within a building
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /{building_id}/:
    get:
      description: Basic webpage templated with Jade that allows for a specefic building to be interfaced with
      parameters:
        - name: building_id
          in: path
          description: id is generated, other fields can be filled in
          required: true
          type: number
          format: integer
      responses:
        '200':
          description: building page displayed
          schema:
            $ref: '#/definitions/robot'
  /{building_id}/robots/:
    get:
      description: Returns a complete list of all robots within the building
      parameters:
        - name: building_id
          in: path
          description: id is generated, other fields can be filled in
          required: true
          type: number
          format: integer
      responses:
        '200':
          description: robot response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new robot within the building specefied by building_id
      parameters:
        - name: building_id
          in: path
          description: id is generated, other fields can be filled in
          required: true
          type: number
          format: integer
      responses:
        '200':
          description: robot created
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /:building_id/robots/{id}:
    get:
      description: returns the robot with the specefied id
      parameters:
        - name: id
          in: path
          description: id used to find robot
          required: true
          type: number
          format: integer
      responses:
        200:
          description: OK
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: Updates the robot with the specefied id
      parameters:
        - name: id
          in: path
          description: id used to find robot
          required: true
          type: number
          format: integer
      responses:
        200:
          description: Robot updated
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
          
    delete:
      description: deleted the robot with the specefied id 
      parameters:
        - name: id
          in: path
          description: id used to find robot
          required: true
          type: number
          format: integer
      responses:
        200:
          description: OK
definitions:
  robot:
    type: object
    required:
      - id
      - home
      - updated
    properties:
      id:
        type: "string"
      home:
        type: "string"
      name:
        type: "string"
      updated:
        type: "string"
        format: "dateTime"
      sensors:
        type: "array"
        items: 
          $ref: '#/definitions/sensor'
      movement:
        type: "string"
      offensive:
        type: "boolean"
      emergency:
        type: "boolean"
      floor:
        type: "integer"
      x_pos:
        type: "integer"
      y_pos:
        type: "integer"
  sensor:
    type: object
    properties:
      sensorName:
        type: string
      sensorType:
        type: string
      sensorID:
        type: string
      sensorValue:
        type: number
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
